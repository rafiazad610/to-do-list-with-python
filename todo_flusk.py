# -*- coding: utf-8 -*-
"""todo_flask.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_Sl0snPZwf9Vrq44Y6valcgZhVkuHG0L

# To-Do List with Flask
"""

from flask import Flask, render_template_string, request, redirect, url_for
import json, os

app = Flask(__name__)

DATA_FILE = "tasks.json"

def load_tasks():
    if os.path.exists(DATA_FILE):
        with open(DATA_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    return []

def save_tasks(tasks):
    with open(DATA_FILE, "w", encoding="utf-8") as f:
        json.dump(tasks, f, indent=2)

@app.route("/", methods=["GET", "POST"])
def index():
    tasks = load_tasks()
    if request.method == "POST":
        if "new_task" in request.form and request.form["new_task"].strip():
            tasks.append({
                "text": request.form["new_task"].strip(),
                "time": request.form.get("task_time", ""),
                "done": False
            })
        if "toggle" in request.form:
            i = int(request.form["toggle"])
            if 0 <= i < len(tasks):
                tasks[i]["done"] = not tasks[i]["done"]
        if "delete" in request.form:
            i = int(request.form["delete"])
            if 0 <= i < len(tasks):
                tasks.pop(i)
        save_tasks(tasks)
        return redirect(url_for("index"))
    return render_template_string(TEMPLATE, tasks=tasks)

TEMPLATE = """<!DOCTYPE html>
<html>
<head><meta charset='utf-8'><title>My To-Do List</title>
<style>
body { font-family: Arial, sans-serif; background:#f4f6f8; margin:0; padding:2rem; }
.container { max-width:600px; margin:auto; background:#fff; padding:1.5rem; border-radius:12px; box-shadow:0 4px 10px rgba(0,0,0,0.1); }
h1 { text-align:center; color:#333; }
form.add { display:flex; flex-wrap:wrap; gap:0.5rem; margin-bottom:1rem; }
form.add input, form.add button { padding:0.6rem; border-radius:8px; border:1px solid #ccc; }
form.add input[type=text] { flex:2; }
form.add input[type=datetime-local] { flex:1.2; }
form.add button { flex:0.5; border:none; background:#007bff; color:#fff; cursor:pointer; }
form.add button:hover { background:#0056b3; }
ul { list-style:none; padding:0; }
li { display:flex; align-items:center; justify-content:space-between; padding:0.6rem 0; border-bottom:1px solid #eee; }
.done { text-decoration:line-through; color:gray; }
.time { font-size:0.9rem; color:#555; margin-left:0.5rem; }
.actions button { margin-left:0.3rem; padding:0.3rem 0.6rem; border:none; border-radius:6px; cursor:pointer; }
.toggle { background:#28a745; color:#fff; }
.toggle:hover { background:#218838; }
.delete { background:#dc3545; color:#fff; }
.delete:hover { background:#b02a37; }
</style>
</head>
<body>
<div class='container'>
  <h1>üìù My To-Do List</h1>
  <form class='add' method='post'>
    <input type='text' name='new_task' placeholder='Add a new task...' required>
    <input type='datetime-local' name='task_time'>
    <button type='submit'>Add</button>
  </form>
  <ul>
    {% for i, t in enumerate(tasks) %}
      <li>
        <span class='{{ "done" if t.done else "" }}'>
          {{ t.text }} {% if t.time %}<span class='time'>(‚è∞ {{ t.time }})</span>{% endif %}
        </span>
        <div class='actions'>
          <form method='post' style='display:inline;'>
            <button class='toggle' name='toggle' value='{{ i }}'>‚úî</button>
          </form>
          <form method='post' style='display:inline;'>
            <button class='delete' name='delete' value='{{ i }}'>üóë</button>
          </form>
        </div>
      </li>
    {% endfor %}
  </ul>
</div>
</body>
</html>"""

if __name__ == "__main__":
    # Render assigns a dynamic port, so we use PORT from env
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
